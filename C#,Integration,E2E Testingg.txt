Testing is a hygiene factor - not optional
	Unit Testing tests individual services, 
	IntegrationTesting checks flow between services, 
	End to End Testing checks entire application, Human errors also

BackEnd Testing
	Unit Testing

	Integration Testing

	E2E Testing


FrontEnd Testing
	Unit Testing

	Integration Testing

	E2E Testing
		

TDD 
	Xunit
	installation
		Divide into .tests and the code itself

		Test Method
		create void return method with [Fact] attribute

		Arrange - Import the class/write the thing to test and assign it to a variable
		Act - Create an individual/Run function on the class.
		Assert - 
			Assert.Equal("what it should equal", Object)
			Assert.NotNull(Object)
			Assert.IsType(typeof(Employee), Object) 

		dotnet test - tests all the tests in the solution
		dotnet watch test --project TrainingGround.Tests - Add continous testing to file
	Xunit
		MOQ
		define method [Fact]
		Arrange, 
			Setup mock data, instantiate class e.t.c.
		Act, 
			Typically var response = ....command
		Assert
			response.x.y.z
				fluentassertions
				.Should()
					.NotBe()
					.Be()
						TaskStatus.RanToCompletion - returned a response
						response.Result.Result as NotFoundObjectResult -
				Errors throws
					Action result = () => stringCalculator.Add("356");
			        	Exception exception = Assert.Throws<Exception>(result);
			        	Assert.Equal("Invalid input.", exception.Message); 
			    	MethodExists("HighestRateEver").Should().BeTrue();
			     	act.Should().Throw<ArgumentException>().WithMessage("Symbol 'APA' not found");
			     	act.Should().Throw<FileNotFoundException>().WithMessage("Year '1989' not found");

Unit testing works exactly the same. Integration testing also

E2E Testing - Playwright
	Selenium is an industry old thing, very fragile
	Playwright, More modern, and native to c#. Playwright is much more stable, it's bascially a program on my pc
		dotnet tool install --global Microsoft.Playwright.CLI
		cd e2e project
		playwright install

	if we add xunit and playwirght
		[parallelizable(parallelscope-Self)]
		[TestFixture]

	Test
		apge.gotoasync("url")
		protips = page.locator("#protip")
		await expect(pro).tobevisibleasync
			.tohavetitleasync(new Regex(""))

		await .pressasync("enter")
		fillasync

	Runs your site, headless, locally, in browser e.t.c. 

	Default settings .runsettings
	runs headless, its running but it doesn't show you a browser
	channel chrome

JEST