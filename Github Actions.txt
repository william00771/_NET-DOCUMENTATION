CI/CD
	Deferring integration -> the old way
	We want continous integraton
		build, test, merge code -> fast feedback loop
	git hooks - if the tests fail, don't push
	devops - 
basics
	workflows - attatched to a github repository
	Events - 
	jobs - excecution enviroment and runs somthing,
	steps - excecutes an action / or shell script in a certain order
	actions - Indvidual tasks/commands
	runner - A computer part of a work-pool, running or waiting for jobs

101
	name: first_workflow
	on: workflow_dispatch 					- How can you trigger the workflow
	jobs: 									- Jobs list
	  build: 								- Build is the first job
	    runs-on: ubuntu-latest				- The runner itself runs on ubuntu-latest
	    steps:								- The different steps of a job
	      - name: print greeting			- Name of the action
	        run: echo "Hello World!"		- what the action does

	      - name: Set up .NET Core			- 
	        uses: actions/setup-dotnet@v2	- 
	        with:							- 
	          dotnet-version: 8.0.x

	  deploy: 								- Deploy is the second job
	    needs: build 						- It runs after build
	    runs-on: ubuntu-latest 				- The runner itself runs on ubuntu-latest
	    steps:								- The different steps of a job
	      - name: print goodbye				- Name of the action
	        run: echo "Done - bye!"			- what the action does

	Actions
		name: 
		jobs: 								- Every job is a blank machine. You can run multible jobs 											  simultaneously
		uses:
			actions/checkout@v4				- Equivalent of git clone repo
 			actions/setup-dotnet@v2			- Setup dotnet sdk
			actions/cache@v3				- 
			actions/upload-artifact@v3		- Upload artifact so we can use it in the next job
			actions/download-artifact@v3	- Downloads 
			azure/webapps-deploy@v2			- 
			actions/setup-node@v2			- 
			azure/static-web-apps-deploy@v1	- 

		run:
			dotnet test						- 
			npm install --prefix folder		- 
			npm run build --prefix folder	- 

Artifacts - Outputs generated by a job


Some Starter examples:
Front-end testing and build basic setup ---------------------------------
	name: Front-End Build & Testing

	on:
	  push:
	    branches: [ "master" ]
	    paths:
	      - 'diversitytracker.web/**'
	      - 'diversitytracker.web.tests/**'
	  pull_request:
	    branches: [ "master" ]
	    paths:
	      - 'diversitytracker.web/**'
	      - 'diversitytracker.web.tests/**'
	  workflow_dispatch:

	jobs:
	  build:
	    runs-on: ubuntu-latest

	    strategy:
	      matrix:
	        node-version: [21.x]

	    steps:
	    - uses: actions/checkout@v3

	    - name: Set up Node.js for Web
	      uses: actions/setup-node@v3
	      with:
	        node-version: ${{ matrix.node-version }}
	        cache: 'npm'
	        cache-dependency-path: diversitytracker.web/package-lock.json

	    - name: Set up Node.js for Web Tests
	      uses: actions/setup-node@v3
	      with:
	        node-version: ${{ matrix.node-version }}
	        cache: 'npm'
	        cache-dependency-path: diversitytracker.web.tests/package-lock.json

	    - name: Install dependencies (Web)
	      working-directory: ./diversitytracker.web
	      run: npm ci

	    - name: Build (Web)
	      working-directory: ./diversitytracker.web
	      run: npm run build --if-present

	    - name: Install dependencies (Tests)
	      working-directory: ./diversitytracker.web.tests
	      run: npm ci

	    - name: Run tests (Tests)
	      working-directory: ./diversitytracker.web.tests
      run: npm test
 
Front-end deployment through azure ---------------------------------
	name: Build and deploy ASP.Net Core app to an Azure Web App

	env:
	  AZURE_WEBAPP_NAME: officetrackerapi2    # set this to the name of your Azure Web App
	  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root

	on:
	  # push:
	    # branches: [ "main" ]
	  workflow_dispatch:

	permissions:
	  contents: read

	jobs:
	  build:
	    runs-on: ubuntu-latest

	    steps:
	      - uses: actions/checkout@v3

	      - name: Set up .NET Core
	        uses: actions/setup-dotnet@v2
	        with:
	          dotnet-version: 8.0.x

	      - name: Set up dependency caching for faster builds
	        uses: actions/cache@v3
	        with:
	          path: ~/.nuget/packages
	          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
	          restore-keys: |
	            ${{ runner.os }}-nuget-

	      - name: Build with dotnet
	        run: dotnet build --configuration Release

	      - name: dotnet publish
	        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/diversitytracker.api

	      - name: Upload artifact for deployment job
	        uses: actions/upload-artifact@v3
	        with:
	          name: .net-app
	          path: ${{env.DOTNET_ROOT}}/diversitytracker.api

	  deploy:
	    permissions:
	      contents: none
	    runs-on: ubuntu-latest
	    needs: build
	    environment:
	      name: 'Production'
	      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

	    steps:
	      - name: Download artifact from build job
	        uses: actions/download-artifact@v3
	        with:
	          name: .net-app

	      - name: Deploy to Azure Web App
	        id: deploy-to-webapp
	        uses: azure/webapps-deploy@v2
	        with:
	          app-name: ${{ env.AZURE_WEBAPP_NAME }}
	          publish-profile: ${{ secrets.AZURE_API_SECOND }}
	          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

Back-end testing and build basic setup ---------------------------------
	name: Back-End Build & Testing

	on:
	  push:
	    branches: [ "master" ]
	    paths:
	      - 'diversitytracker.api/**'
	      - 'diversitytracker.api.tests/**'
	  pull_request:
	    branches: [ "master" ]
	    paths:
	      - 'diversitytracker.api/**'
	      - 'diversitytracker.api.tests/**'
	  workflow_dispatch:

	jobs:
	  build:
	    runs-on: ubuntu-latest

	    steps:
	    - uses: actions/checkout@v4

	    - name: Setup .NET
	      uses: actions/setup-dotnet@v4
	      with:
	        dotnet-version: 8.0.x

	    - name: Restore dependencies (API)
	      working-directory: ./diversitytracker.api
	      run: dotnet restore

	    - name: Build (API)
	      working-directory: ./diversitytracker.api
	      run: dotnet build --no-restore

	    - name: Restore dependencies (API Tests)
	      working-directory: ./diversitytracker.api.tests
	      run: dotnet restore

	    - name: Test (API Tests)
	      working-directory: ./diversitytracker.api.tests
	      run: dotnet test --no-restore --verbosity normal

Back-end deployment through azure ---------------------------------
	name: Deploy Web App to Azure Static Web

	on:
	  push:
	    branches: [ "main" ]
	    paths:
	      - 'diversitytracker.web/**'
	  workflow_dispatch:

	jobs:
	  build-and-deploy:
	    runs-on: ubuntu-latest
	    
	    steps:
	    - uses: actions/checkout@v2
	    
	    - name: Setup Node.js
	      uses: actions/setup-node@v2
	      with:
	        node-version: '21'  # specify Node.js version here

	    - name: Install dependencies
	      run: npm install --prefix diversitytracker.web

	    - name: Build
	      run: npm run build --prefix diversitytracker.web

	    - name: Deploy to Azure Static Web App
	      uses: Azure/static-web-apps-deploy@v1
	      with:
	        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATICWEB_SECOND }}
	        repo_token: ${{ secrets.GITHUB_TOKEN }} # Provides GitHub token for authentication
	        action: "upload"
	        ###### Repository/Build Configurations - These fields are configured during the Azure SWA setup
	        app_location: "diversitytracker.web"  # Location for the source code of your app
	        api_location: ""  # No API for static frontend
	        output_location: "dist"  # Build output directory