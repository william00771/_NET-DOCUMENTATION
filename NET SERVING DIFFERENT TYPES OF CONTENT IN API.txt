Blazor



MVC
	Usage
		MVC uses a Model View Controller Relationship with special Razor Pages <html> mixed with c# and js
		@ before writing C# code always
		@model NameSpace.Models.NameOfModel - To Import Models
		@using entityframework.core6.0 - Import Namespace
		ViewData["Title"] = "" - Sets the title of the page

		Inside the IActionResult methods, Simply create an instance of the model or whatever you want to do, then inside return view(*) - Put the model in. Now you can refeer to it inside the view
	Folder Structure
		wwwroot - Where you place css, Js and external libary files
		Controllers - Connects views to models
		Models - 
		Views - All Html content views are here
			Layout.cshtml - Where all the Universal content is (navbars, footers e.t.c.)
					@RenderBody() - Where the views content is located 
		Appsettings.json - Configuration File
		Program.cs - The Main application services
	Controllers
		return view() - Returns the view inside the folder of same name as controller index.cshtml
		method called ContactPage return view() will return ContactPage.cshtml in controllerName folder

		Inside the IActionResult methods, Simply create an instance of the model or whatever you want to do, then inside return view(*) - Put the model in. Now you can refeer to it inside the view

		return RedirectToAction(nameof(Index)) - Redirect actually runs the IActionResult Index Again.
		return view("Index") - view skips the IActionResult and goes straight to the view.
			This can cause errors if for example i create an object inside an IActionResult
	Http Links, tag helpers
		<a asp-controller="Controller to refeer to" + asp-action="View to go to in the given controller">
		<a asp-controller="" asp-action="Name of request" - for example to do the post version of the controller

		asp-route-id="@model.id" - Data Routing HTTP from view to view. the asp-route-id goes into the controller id

		asp-for-email-validation

		Form
			asp-controller="" - Name Of The Controller to communicate with
			type="submit" 
			asp-for= - Is databinding. This way you can bind data from ex input to model
			asp-validation-for - Error Handling Has to do with error handling display, which you can set in the model
	View
		Display List model. Same as in c# 
			foreach(var item in model){..}
		@model.Name - Access Model
		@Html.DisplayNameFor(modelItem => item.PropertyName)
		@Html.DisplayFor(modelItem => item.PropertyName)


Blazor
	Definition
		Razor is a markup syntax
		Blazor uses webassembly, so you can run c# directly in browser
		comes in two flavors - wasm and server
		It's quick but heavy
	Folder Structure
		wwwroot
			Core html and css
		Layout
			here you layout the page
		Program.cs
	Basics
		@page "/counter" - Define what url is should be
		#inject HttpClient Http - Use the addscoped services dynamically from program.cs
		@code{
			...write c# code in here
			...Can write html in here
		}
		@{
			protected ovveride async task OnInitializeAsync() - runs on start
		}
		@Var - Display a var from the code block
		@inject
	Tags
		<PageTitle>
	Events
		@onclick="method()" - Run method Onclick