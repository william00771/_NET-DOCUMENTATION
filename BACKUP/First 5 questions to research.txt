First 5 questions to research:
	What does it mean that LINQ has deferred execution?
		Means it acts like a set of instructions, a query that you can then call whenever you want to.

	Why does the `this` keyword not exist in a static class?
		Because a static class isn't instantiated, only called. It's not an object since you never declare it. So it can't refeer to itself.

	What is the lifetime of a parameter used in a primary constructor?
		It's dependent on the lifetime of the instance the parameter is a part of. So as long as the instance exists the primary constructor parameters should exist.

	What does it mean for a setter to have the accessor `init` in an auto-property?
		when you use init it instead of set for example, you can control the initial setting of a property within the class so that it cannot be changed outside of the class. It can only be set during object initialization

	What is Intermediate Language (IL)?
		C# is compiled before it can be executed. The compilation is done to something called common intermediate language. A Binary instruction set, used by compilers for the .NET Framework before compiling to machine code.

		portable across different platforms

		The IL then gets compiled to machine code during runtime. This process is known as Just-In-Time (JIT) compilation.

	What is the result of `Console.WriteLine(new String("Hello") == new String("Hello"));`? Why?
		Technically It's false because the references are different in memory. But Since comparing strings is so common in C# the devs neglected this fact. Comparing their values directly instead. Meaning true.

	What is the difference between a const and `read-only` field?
		They are both immutable fields. Readonly belongs to the class it is set in while Const belongs to the type. This means const field is assigned compile time, while readonly is assigned at runtime. No idea what this actually means in practical terms 

	In a .NET 8 console application, where is the starting point when you run the app?
		Inside program.cs This is where the application builds, all the services are added, middleware and then finally the excecution of the application

	What is Pattern matching?
		Patterns match against specific types or properties of a class or object. A switch statement is a great example of this.
		different cases for different object properties. example Operation.Add, Operation.Subtract. Finds matching pattern.

	What is the difference between a project-file and a solution-file?
		A solution file manages the project files. Solutions aren't projects themselves but managers of projects.

	What is an assembly?
		A unit of deployment and versioning in .NET. A container for metadata files, dlls, exe, it contains the intermediate language code, Versioning e.t.c.

	What are named parameters?
		Instead of inputting parameters in one specific order, named parameters can help you input them in a more cohesive way. whatever order you want
		public void PrintDetails(string name, int age, string city)
		PrintDetails(name: "John", age: 30, city: "New York");

	What do you use the null-coalescing operator for?
		// Example usage of the null-coalescing operator in C#
		int? nullableNumber = null;
		int result = nullableNumber ?? -1; // If nullableNumber is null, result will be -1, otherwise, it will be the value of nullableNumber
		So you can do something if the operator is null. You check for it using ??. 

	What are some use-cases for Reflections?
		If you cannot access private fields
		If you do not have public access to source code.

	What are Try-methods used for?
		they return bool value whether an operation was successful or not. Meaning you can test for example parsing text before actually parsing. Tryparse, TryGetValue
