Create new array from array on the fly.

Input: ["a", "b", "c"]
Output: ["1: a", "2: b", "3: c"]

public static List<string> Number(List<string> lines) 
{
    var returnArr = lines
        .Select((line, index) => $"{index+1}: {line}");
    
    return returnArr.ToList();
}


Check If Array Contains Duplicates.

public bool ContainsDuplicate(int[] nums) {
    return nums.Length != nums.Distinct().Count();
}


static void nthFibonacci(int nthTerm)
{
    int number1 = 0;
    int number2 = 1;
    int nthNumber;

    if(nthterm == 0) 0
    if(nthterm == 1) 1

    for(int i = 0; i < nthTerm; i++)
    {
        Console.WriteLine("Term #" + i + : + number1);
        nthNumber = number1 + number2;
        number1 = number2;
        number2 = nthnumber;
    }
}

public static int GetNthFibonacci_Rec(int n)
{
    if ((n == 0) || (n == 1))
    {
        return n;
    }
    else
        returnGetNthFibonacci_Rec(n - 1) + GetNthFibonacci_Rec(n - 2);
}

Roman
    Takes string s
    int number = 0;
    for(int i = 0; i < s.length; i++)
    {
        string current = s[i].toString();
        if(current == "M")
        {
            number += 1000;
        }
    }