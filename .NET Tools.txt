HTTPClient / HTTP Factory
	_httpClientFactory
		.CreateClient() - Creates a client to use
			.DefaultRequestHeaders.Add("x-api-key", _ticksterApiKey); - Add a custom header with ex authentication
			.GetAsync("url") - Sends a get request, returns a Task<HttpResponseMessage>
		HttpResponseMessage type
			.Content.ReadAsStringAsync(); - Reads HttpResponse content (body) as plain text
			JsonSerializer.Deserialize<MODEL>(plaintextresponse) - Converts the plain text json to your model that matches it

			.IsSuccessStatusCode - Returns true if the HttpResponseMessage was OK 200 or similar, Check for this before running deserializer
 
Read From File
 	string projectDirectory = Directory.GetParent(AppContext.BaseDirectory).Parent.Parent.Parent.FullName;
    string jsonFilePath = Path.Combine(projectDirectory, "Data", "jsonapiresponse.json");
    string responseJson = await File.ReadAllTextAsync(jsonFilePath);

Codegenerator:
	dotnet tool install -g dotnet-aspnet-codegenerator
	dotnet tool install -g dotnet-ef
	dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design
	dotnet aspnet-codegenerator --help
	dotnet aspnet-codegenerator controller --help
		dotnet aspnet-codegenerator controller -name MoviesController -outDir Controllers -m Movie -dc MovieContext -dbProvider sqlite -api

		dotnet aspnet-codegenerator controller -name MoviesController -outDir Controllers -m Movie -dc MovieContext -dbProvider sqlite -api -f