E2E Testing - Playwright
	Runs your site, headless, locally, in browser e.t.c. 
	Selenium is an industry old thing, very fragile
	Playwright, More modern, and native to c#. Playwright is much more stable, it's bascially a program on my pc
	Installation
		dotnet tool install --global Microsoft.Playwright.CLI
		cd e2e project
		playwright install
		if we add xunit and playwirght
			[parallelizable(parallelscope-Self)]
			[TestFixture]
	Test
		apge.gotoasync("url")
		protips = page.locator("#protip")
		await expect(pro).tobevisibleasync
			.tohavetitleasync(new Regex(""))

		await .pressasync("enter")
		fillasync

Jest - For testing typescript, react e.t.c.
	Installation
		npm i -D vitest jsdom @testing-library/react @testing-library/jest-dom
		vitetest.config.ts
			import { defineConfig } from 'vitest/config'
			export default defineConfig({
			  test: {
			    environment: 'jsdom',
			    setupFiles: ['./tests/setup.ts'],
			    include: ['./tests/**/*.test.tsx'],
			    globals: true
			  }
			})		
		in package.json
			{
			  ...
			  "scripts": {
			    ...
			    "test": "vitest --config ./vitest.config.ts"
			  },
			  "dependencies": {},
			  "devDependencies": {}
			}
			npm run test
		Create a folder named test
			create setup.ts
				import { expect, afterEach } from 'vitest';
				import { cleanup } from '@testing-library/react';
				import matchers from '@testing-library/jest-dom/matchers';
				expect.extend(matchers);
				afterEach(() => {
				  cleanup();
				});
			app.test.tsx
				import { render, screen } from '@testing-library/react';
				import App from "../src/App";
				import React from 'react';
		Add Tests
			describe('App', () => {
			  it('renders headline', () => {
			    render(<App />);
			    const headline = screen.getByText(
			      /Click on the Vite and React logos to learn more/i
			    );
			    expect(headline).toBeInTheDocument();
			  });
			});

			describe('it is alive', () => {
				it('get greeting', () => {
					const result = greet('')

					expect(result).toEqual("hello Salties")
				})
			})
	Run tests
		npm test
		npm run test:watch