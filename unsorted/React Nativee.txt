installation
	expo cli - most popular (like vite) - Third party service, easier integration, app dev, you can switch
		npx create-expo-app AwesomeProject
		npx create-expo-app AwesomeProje --template expo-template-blank-typescript
		To npm run web
			npx expo install react-native-web react-dom @expo/metro-runtime
			
		sudo npm i -g expo-cli
		expo init folder/app
		NEW UNDEPRECATED WAY 
			npx react-native init MyNewProject --template react-native-template-typescript + npx expo start
		You also need Xcode for mac
		npx expo init
			npm run ios, web, android
		npm start
		npm run android, ios, web
		On phone	
			expo go - on iphone
			npm start - expo dev server which you can scan on app
	native cli - bare bone setup, more work, but better with source code

Components
	You are going to nest divs inside divs, aka views inside views. Get used to it. With native
	Text - Span
	Button - button
		self closing tag
		title=''
	TextInput - Input
	Image - img
	Modal - div with css for overlay

	ScrollView - Div with scrollable
	TouchableOpacity - Button
	FlatList - ul
	TouchableHighlight - button w hover
	ActivityIndicator - Custom spinner
	StatusBar -  

Styling - There is no CSS!
	Inline Styles or Stylesheet Objects
	const styles = Stylesheet.create({})
	Styles do not cascade

Hookds

Style Guide